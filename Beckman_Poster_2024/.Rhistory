library(mvtnorm)
library(rgl)
#establish parameter values
log_mu1 <- 4.70915535794278
log_sigma1 <- 6.234717665387251
log_mu2 <- 4.875076242644642
log_sigma2 <- 6.957650566833429
rho <- 0.9735646160233167
#convert parameter values to not log scale
mu1 <- exp(log_mu1)
sigma1 <- exp(log_sigma1)
mu2 <- exp(log_mu2)
sigma2 <- exp(log_sigma2)
#set sample sizes for Iran (x) and France (y)
n_x <- 10
n_y <- 16
#generate x and y samples
set.seed(123)  # for reproducibility
x_samples <- rlnorm(n_x, log(mu1), log(sigma1))
y_samples <- rlnorm(n_y, log(mu2), log(sigma2))
#calculate grid points
x <- seq(min(x_samples), max(x_samples), length.out = 50)
y <- seq(min(y_samples), max(y_samples), length.out = 50)
z <- matrix(0, length(x), length(y))
# Calculate densities for each point in the grid
for (i in 1:length(x)) {
for (j in 1:length(y)) {
z[i, j] <- dmvnorm(c(x[i], y[j]), mean = c(mu1, mu2), sigma = matrix(c(sigma1^2, rho * sigma1 * sigma2, rho * sigma1 * sigma2, sigma2^2), nrow = 2))
}
}
#load rgl package (if not already loaded)
library(rgl)
#plot using plot3d from rgl package
plot3d(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue", xlab = "X", ylab = "Y", zlab = "Density", main = "Bivariate Lognormal Distribution")
# Example using plotly for 3D plotting
library(plotly)
# Example using plotly for 3D plotting
install.packages('plotly')
library(plotly)
# Create a 3D scatter plot
plot_ly(x = x, y = y, z = z, type = "scatter3d", mode = "markers", marker = list(size = 5))
# Create a 3D scatter plot
plot_ly(x = x, y = y, z = z, type = "scatter3d", mode = "markers", marker = list(size = 5))
#establish parameter values
log_mu1 <- 4.70915535794278
log_sigma1 <- 6.234717665387251
log_mu2 <- 4.875076242644642
log_sigma2 <- 6.957650566833429
rho <- 0.9735646160233167
#convert parameter values to not log scale
mu1 <- exp(log_mu1)
sigma1 <- exp(log_sigma1)
mu2 <- exp(log_mu2)
sigma2 <- exp(log_sigma2)
#set sample sizes for Iran (x) and France (y)
n_x <- 10
n_y <- 16
#generate x and y samples
set.seed(123)  # for reproducibility
x_samples <- rlnorm(n_x, log(mu1), log(sigma1))
y_samples <- rlnorm(n_y, log(mu2), log(sigma2))
#calculate grid points
x <- seq(min(x_samples), max(x_samples), length.out = 50)
y <- seq(min(y_samples), max(y_samples), length.out = 50)
z <- matrix(0, length(x), length(y))
#calculate densities for each point in the grid
for (i in 1:length(x)) {
for (j in 1:length(y)) {
z[i, j] <- dmvnorm(c(x[i], y[j]), mean = c(mu1, mu2), sigma = matrix(c(sigma1^2, rho * sigma1 * sigma2, rho * sigma1 * sigma2, sigma2^2), nrow = 2))
}
}
#load plotly package (if not already loaded)
library(plotly)
#create 3D scatter plot with plotly
plot_ly(x = x, y = y, z = z, type = "scatter3d", mode = "markers", marker = list(size = 5)) %>% layout(scene = list(xaxis = list(title = "X"), yaxis = list(title = "Y"), zaxis = list(title = "Density"), camera = list(eye = list(x = 1.8, y = 1.8, z = 0.8))))
